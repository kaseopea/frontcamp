{"version":3,"sources":["../../../src/js/newsClient/client.js"],"names":["NewsAPIClient","apiKey","apikey","Promise","resolve","reject","API_URLS","sources","url","params","fetch","getUrl","then","response","json","data","catch","err","message","param","value","news","Object","assign","articles","paramsObj","key","push","encodeURIComponent","join","NewsClient"],"mappings":";;;;;;;;IAAMA,a;AACL,wBAAYC,MAAZ,EAAoB;AAAA;;AACnB,OAAKC,MAAL,GAAcD,MAAd;AACA;;;;mCAEgB;AAAA;;AAChB,UAAO,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAAA,4BACdC,SAASC,OADK;AAAA,QAClCC,GADkC,qBAClCA,GADkC;AAAA,kDAC7BC,MAD6B;AAAA,QAC7BA,MAD6B,yCACpB,EADoB;;;AAGvCC,UAAM,MAAKC,MAAL,CAAYH,GAAZ,EAAiBC,MAAjB,CAAN,EACCG,IADD,CACM,UAACC,QAAD;AAAA,YAAcA,SAASC,IAAT,EAAd;AAAA,KADN,EAECF,IAFD,CAEM,UAACG,IAAD;AAAA,YAAUX,QAAQW,KAAKR,OAAb,CAAV;AAAA,KAFN,EAGCS,KAHD,CAGO,UAACC,GAAD;AAAA,YAASZ,OAAOY,IAAIC,OAAX,CAAT;AAAA,KAHP;AAIA,IAPM,CAAP;AAQA;;;iCACcC,K,EAAOC,K,EAAO;AAAA;;AAC5B,UAAO,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAAA,yBACdC,SAASe,IADK;AAAA,QAClCb,GADkC,kBAClCA,GADkC;AAAA,+CAC7BC,MAD6B;AAAA,QAC7BA,MAD6B,yCACpB,EADoB;;AAEvCC,UAAM,OAAKC,MAAL,CAAYH,GAAZ,EAAiBc,OAAOC,MAAP,CAAc,EAAd,EAAkBd,MAAlB,sBACrBU,KADqB,EACbC,KADa,EAAjB,CAAN,EAGCR,IAHD,CAGM,UAACC,QAAD;AAAA,YAAcA,SAASC,IAAT,EAAd;AAAA,KAHN,EAICF,IAJD,CAIM,UAACG,IAAD;AAAA,YAAUX,QAAQW,KAAKS,QAAb,CAAV;AAAA,KAJN,EAKCR,KALD,CAKO,UAACC,GAAD;AAAA,YAASZ,OAAOY,IAAIC,OAAX,CAAT;AAAA,KALP;AAMA,IARM,CAAP;AASA;;AAED;;;;yBACOV,G,EAAKC,M,EAAQ;AACnB,OAAIgB,YAAY,EAAhB;AACAhB,UAAOP,MAAP,GAAgB,KAAKA,MAArB;AACA,QAAK,IAAIwB,GAAT,IAAgBjB,MAAhB,EAAwB;AACvBgB,cAAUE,IAAV,CAAkBD,GAAlB,SAAyBE,mBAAmBnB,OAAOiB,GAAP,CAAnB,CAAzB;AACA;AACD,UAAUlB,GAAV,SAAiBiB,UAAUI,IAAV,CAAe,GAAf,CAAjB;AACA;;;;;;AAEF,IAAMC,aAAc;AAAA,QAAO,EAAC9B,4BAAD,EAAP;AAAA,CAAD,EAAnB","file":"client.js","sourcesContent":["class NewsAPIClient {\r\n\tconstructor(apiKey) {\r\n\t\tthis.apikey = apiKey;\r\n\t}\r\n\r\n\tgetNewsSources() {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet {url, params = {}} = API_URLS.sources;\r\n\r\n\t\t\tfetch(this.getUrl(url, params))\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => resolve(data.sources))\r\n\t\t\t.catch((err) => reject(err.message));\r\n\t\t});\r\n\t}\r\n\tgetNewsByParam(param, value) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet {url, params = {}} = API_URLS.news;\r\n\t\t\tfetch(this.getUrl(url, Object.assign({}, params, {\r\n\t\t\t\t[param]: value\r\n\t\t\t})))\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => resolve(data.articles))\r\n\t\t\t.catch((err) => reject(err.message));\r\n\t\t});\r\n\t}\r\n\r\n\t/* UTILS */\r\n\tgetUrl(url, params) {\r\n\t\tlet paramsObj = [];\r\n\t\tparams.apikey = this.apikey;\r\n\t\tfor (let key in params) {\r\n\t\t\tparamsObj.push(`${key}=${encodeURIComponent(params[key])}`);\r\n\t\t}\r\n\t\treturn `${url}?${paramsObj.join('&')}`;\r\n\t}\r\n}\r\nconst NewsClient = (() => ({NewsAPIClient}))();\r\n"]}