{"version":3,"sources":["../../src/js/view.js"],"names":["Renderer","element","style","display","content","innerHTML","className","classList","add","remove","window","getComputedStyle","Math","max","document","documentElement","clientWidth","innerWidth","MOBILE_BREAKPOINT","VIEW"],"mappings":";;;;;;IAAMA,Q;;;;;;;;AACJ;gCACYC,O,EAAS;AACnB,aAAOA,UAAWA,QAAQC,KAAR,CAAcC,OAAd,GAAwB,OAAnC,GAA8C,IAArD;AACD;;AAED;;;;gCACYF,O,EAAS;AACnB,aAAOA,UAAWA,QAAQC,KAAR,CAAcC,OAAd,GAAwB,MAAnC,GAA6C,IAApD;AACD;;AAED;;;;4BACQF,O,EAASG,O,EAAS;AACxB,aAAOH,UAAWA,QAAQI,SAAR,GAAoBD,OAA/B,GAA0C,IAAjD;AACD;;AAED;;;;8BACUH,O,EAAS;AACjB,aAAOA,UAAWA,QAAQI,SAAR,GAAoB,EAA/B,GAAqC,IAA5C;AACD;;AAED;;;;6BACSJ,O,EAASK,S,EAAW;AAC3B,aAAOL,QAAQM,SAAR,CAAkBC,GAAlB,CAAsBF,SAAtB,CAAP;AACD;AACD;;;;gCACYL,O,EAASK,S,EAAW;AAC9B,aAAOL,QAAQM,SAAR,CAAkBE,MAAlB,CAAyBH,SAAzB,CAAP;AACD;;AAED;;;;6BACSL,O,EAAS;AAChB,aAAOS,OAAOC,gBAAP,CAAwBV,OAAxB,EAAiCE,OAAjC,KAA6C,MAApD;AACD;;AAED;;;;mCACe;AACb,aAAOS,KAAKC,GAAL,CAASC,SAASC,eAAT,CAAyBC,WAAlC,EAA+CN,OAAOO,UAAP,IAAqB,CAApE,KAA0EC,iBAAjF;AACD;;;;;;AAEH,IAAMC,OAAQ;AAAA,SAAO;AACnBnB;AADmB,GAAP;AAAA,CAAD,EAAb","file":"view.js","sourcesContent":["class Renderer {\r\n  // Show element\r\n  showElement(element) {\r\n    return element ? (element.style.display = \"block\") : null;\r\n  }\r\n\r\n  // Hide element\r\n  hideElement(element) {\r\n    return element ? (element.style.display = \"none\") : null;\r\n  }\r\n\r\n  // Render content to specific element\r\n  setView(element, content) {\r\n    return element ? (element.innerHTML = content) : null;\r\n  }\r\n\r\n  // Reset content of specific element\r\n  resetView(element) {\r\n    return element ? (element.innerHTML = \"\") : null;\r\n  }\r\n\r\n  // Add class\r\n  addClass(element, className) {\r\n    return element.classList.add(className);\r\n  }\r\n  // Remove class\r\n  removeClass(element, className) {\r\n    return element.classList.remove(className);\r\n  }\r\n\r\n  // Check if element is hidden\r\n  isHidden(element) {\r\n    return window.getComputedStyle(element).display === \"none\";\r\n  }\r\n\r\n  // check if view is mobile\r\n  isMobileView() {\r\n    return Math.max(document.documentElement.clientWidth, window.innerWidth || 0) <= MOBILE_BREAKPOINT;\r\n  }\r\n}\r\nconst VIEW = (() => ({\r\n  Renderer\r\n}))();\r\n"]}