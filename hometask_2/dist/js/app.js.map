{"version":3,"sources":["../../src/js/app.js"],"names":["NewsClient","Error","CLIENT_MESSAGES","error","noNewsClientDefined","newsClient","NewsAPIClient","NEWSAPI_API_KEY","appView","VIEW","Renderer","App","initNewsSources","_loadDefaultNews","DEFAULT_KEYWORS","_initResizeEventListener","_initMainMenu","getNewsSources","then","hideElement","ELEMENTS","loader","setView","sourcesContent","CONTROLLER","getSourcesHtml","data","catch","mainContent","_getErrorMarkup","noSourcesLoaded","sourceId","isMobileView","resetView","showElement","_loadNewsBySourceId","loadDefaultNews","isHidden","addClass","document","body","SELECTORS","menuExpanded","removeClass","keywords","query","Math","floor","random","length","getNewsByParam","getNewsHtml","noNewsLoaded","window","addEventListener","message"],"mappings":"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","file":"app.js","sourcesContent":["// Check if NewsClient is defined on the page\r\nif (!NewsClient) {\r\n  throw new Error(CLIENT_MESSAGES.error.noNewsClientDefined);\r\n}\r\n\r\nconst newsClient = new NewsClient.NewsAPIClient(NEWSAPI_API_KEY);\r\nconst appView = new VIEW.Renderer();\r\n\r\nclass App {\r\n  /* init */\r\n  init() {\r\n    this.initNewsSources();\r\n    this._loadDefaultNews(DEFAULT_KEYWORS);\r\n\t  this._initResizeEventListener();\r\n\t  this._initMainMenu();\r\n  }\r\n\r\n  /* ************ VIEW ACTIONS ************ */\r\n  initNewsSources() {\r\n    newsClient\r\n      .getNewsSources()\r\n      .then(data => {\r\n        appView.hideElement(ELEMENTS.loader);\r\n        appView.setView(\r\n          ELEMENTS.sourcesContent,\r\n          CONTROLLER.getSourcesHtml(data)\r\n        );\r\n      })\r\n      .catch(err => {\r\n        appView.hideElement(ELEMENTS.loader);\r\n        appView.setView(\r\n          ELEMENTS.mainContent,\r\n          this._getErrorMarkup(CLIENT_MESSAGES.error.noSourcesLoaded)\r\n        );\r\n      });\r\n  }\r\n  \r\n  openSource(sourceId) {\r\n    if (appView.isMobileView()) {\r\n      appView.hideElement(ELEMENTS.sourcesContent);\r\n    }\r\n\r\n    if (sourceId) {\r\n      appView.resetView(ELEMENTS.mainContent);\r\n      appView.showElement(ELEMENTS.loader);\r\n      this._loadNewsBySourceId(sourceId);\r\n    }\r\n  }\r\n\r\n  // Logo click\r\n  openIndex() {\r\n    this.loadDefaultNews(DEFAULT_KEYWORS);\r\n  }\r\n\r\n  // Mobile Menu Button\r\n  toggleMenu() {\r\n    if (appView.isHidden(ELEMENTS.sourcesContent)) {\r\n      appView.showElement(ELEMENTS.sourcesContent);\r\n      appView.addClass(document.body, SELECTORS.menuExpanded);\r\n    } else {\r\n      appView.hideElement(ELEMENTS.sourcesContent);\r\n      appView.removeClass(document.body, SELECTORS.menuExpanded);\r\n    }\r\n  }\r\n\r\n  /* ************ UTILS (Private) ************ */\r\n\r\n  /* init menu */\r\n  _initMainMenu() {\r\n\tif (appView.isMobileView() && !appView.isHidden(ELEMENTS.sourcesContent)) {\r\n\t\tappView.addClass(document.body, SELECTORS.menuExpanded);\r\n    }\r\n  }\r\n\r\n  /* Load default news on startup */\r\n  _loadDefaultNews(keywords) {\r\n    let query = keywords[Math.floor(Math.random() * keywords.length)];\r\n\r\n    appView.resetView(ELEMENTS.mainContent);\r\n    appView.showElement(ELEMENTS.loader);\r\n\r\n    newsClient\r\n      .getNewsByParam(\"q\", query)\r\n      .then(data => {\r\n        appView.hideElement(ELEMENTS.loader);\r\n        appView.setView(ELEMENTS.mainContent, CONTROLLER.getNewsHtml(data));\r\n      })\r\n      .catch(err => {\r\n        appView.hideElement(ELEMENTS.loader);\r\n        appView.setView(\r\n          ELEMENTS.mainContent,\r\n          this._getErrorMarkup(CLIENT_MESSAGES.error.noNewsLoaded)\r\n        );\r\n      });\r\n  }\r\n\r\n  /* InitResizeEventListener */\r\n  _initResizeEventListener() {\r\n    window.addEventListener(\"resize\", () => {\r\n      if (appView.isMobileView()) {\r\n\t\tappView.hideElement(ELEMENTS.sourcesContent);\r\n\t\tappView.removeClass(document.body, SELECTORS.menuExpanded);\r\n      } else {\r\n        appView.showElement(ELEMENTS.sourcesContent);\r\n      }\r\n    });\r\n  }\r\n\r\n  /* Load news by source id */\r\n  _loadNewsBySourceId(sourceId) {\r\n\tappView.removeClass(document.body, SELECTORS.menuExpanded);\r\n    newsClient\r\n      .getNewsByParam(\"sources\", sourceId)\r\n      .then(data => {\r\n        appView.hideElement(ELEMENTS.loader);\r\n        appView.setView(ELEMENTS.mainContent, CONTROLLER.getNewsHtml(data));\r\n      })\r\n      .catch(err => {\r\n        appView.hideElement(ELEMENTS.loader);\r\n        appView.setView(\r\n          ELEMENTS.mainContent,\r\n          this._getErrorMarkup(CLIENT_MESSAGES.error.noNewsLoaded)\r\n        );\r\n      });\r\n  }\r\n\r\n  /* Get Error Markup */\r\n  _getErrorMarkup(message) {\r\n    return ` <div class=\"error-message\">${message}</div>`\r\n  }\r\n}\r\n"]}